
  package org.example;

    
    
/**
* Meant to represent the value of a numerical physical quantity.  
Can be mapped in VOTables to FIELDrefs and PARAM(ref)s, in which case the @unit attribute of those VOTable elements is assumed to be mapped to the attribute on the Quantity.
Ths is only allowed for these predefined ivoa types.
*
* dataType:  Quantity
*
* @author generated by https://github.com/ivoa/vo-dml tools
*/
      @jakarta.persistence.MappedSuperclass


       public abstract class Quantity {
      


    /**
    * The unit of this  quantity. : Attribute unit type ivoa:Unit : multiplicity 0..1
    *
    */
      //direct
        @jakarta.persistence.Embedded

    protected Unit unit;

      /**
       * Creates a new Quantity
       */
      public Quantity() {
        super();
      }
      
        /**
        * full parameter constructor.
            
        *   @param unit The unit of this  quantity.
        */
        public  Quantity (
          final Unit unit
        )
        {

           
                       this.unit = unit;
                   
          }



        /**
        * Update this object with the content of the given object. Note that references will remain as is rather than be copied.
        * @param other the object to be copied.
        */
        public void updateUsing ( final Quantity other)
        {

        
                  this.unit= other.unit;
            

        }

        
        /**
        * Returns unit Attribute.
        * @return unit Attribute
        */
        
        public Unit getUnit() {
        
        return (Unit)this.unit;
            

        }
        
        
        /**
        * Set unit Attribute.
        * @param pUnit value to set
        */
        public void setUnit(final Unit pUnit) {
        
        this.unit = pUnit;
                

        }



}
  